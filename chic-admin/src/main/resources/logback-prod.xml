<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!-- 设置存储路径变量 -->
    <property name="LOG_HOME" value="/logs/"/>

    <!-- INFO 输出日志 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/info.log</File>
        <!-- 文件滚动模式 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名，可设置文件类型为.gz，开启文件压缩 -->
            <FileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!-- 输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{50} - %msg%n</pattern>
            <!-- 设置编码 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 级别过滤器匹配 INFO 级别日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- WARN 输出日志 -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/warn.log</File>
        <!-- 文件滚动模式 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名，可设置文件类型为.gz，开启文件压缩 -->
            <FileNamePattern>${LOG_HOME}/warn.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!-- 输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{50} - %msg%n</pattern>
            <!-- 设置编码 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 级别过滤器匹配 WARN 级别日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR 输出日志 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/error.log</File>
        <!-- 文件滚动模式 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名，可设置文件类型为.gz，开启文件压缩 -->
            <FileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!-- 输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{50} - %msg%n</pattern>
            <!-- 设置编码 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 级别过滤器匹配 ERROR 级别日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- LOGSTASH 输出日志 -->
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <!-- Logstash 服务端 -->
        <destination>logstash:4562</destination>
        <!-- 设置编码 -->
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder"/>
    </appender>

    <!-- 指定基础的日志输出级别 -->
    <root level="INFO">
        <!-- appender将会添加到这个logger -->
        <appender-ref ref="INFO"/>
        <appender-ref ref="WARN"/>
        <appender-ref ref="ERROR"/>
        <appender-ref ref="LOGSTASH"/>
    </root>
</configuration>